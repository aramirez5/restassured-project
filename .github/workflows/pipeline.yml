name: Java CI with Maven
run-name: Pipeline - from user @${{ github.actor }}

on:
  push:
    branches:
      - master
  
  pull_request:
    types:
      - opened
      - closed
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Build with Maven
        run: mvn compile

      - name: Generate war
        run: jar cvf myapp.war *

      - name: Upload war
        uses: actions/upload-artifact@v3
        with:
          name: myapp.war
          path: ./target/myapp*

  analyze:
    name: analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  cleanup:
    needs: [build]
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Analyze dependencies
        run: |
          ls -la
          mvn dependency:analyze

  deploy: 
    needs: [cleanup]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: myapp.war
          path: ./deploy

      - run: ls -ltr ./deploy

  install:
    needs: [deploy]
    runs-on: ubuntu-latest

    steps: 
      - name: Install
        run: mvn install
          
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash

  tests:
    needs: [install]
    runs-on: ubuntu-latest
    name: tests
    steps:
      - name: Run REST Assured test
        run: mvn test -Dtest=CreateBookingTest.java

      - name: Upload REST Assured report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: REST Assured report
          path: target/surefire-reports
